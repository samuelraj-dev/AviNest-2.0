/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

import { Route as rootRouteImport } from './routes/__root';
import { Route as IndexRouteImport } from './routes/index';
import { Route as authLoginRouteImport } from './routes/(auth)/login';
import { Route as dashboardStudentLayoutRouteImport } from './routes/(dashboard)/student/_layout';
import { Route as dashboardStudentLayoutIndexRouteImport } from './routes/(dashboard)/student/_layout.index';
import { Route as dashboardStudentLayoutLibraryNotesIndexRouteImport } from './routes/(dashboard)/student/_layout.library/notes/index';
import { Route as dashboardStudentLayoutLibraryCoursesIndexRouteImport } from './routes/(dashboard)/student/_layout.library/courses/index';
import { Route as dashboardStudentLayoutLibraryAssignmentsIndexRouteImport } from './routes/(dashboard)/student/_layout.library/assignments/index';

const dashboardStudentRouteImport = createFileRoute('/(dashboard)/student')();

const IndexRoute = IndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => rootRouteImport,
} as any);
const dashboardStudentRoute = dashboardStudentRouteImport.update({
    id: '/(dashboard)/student',
    path: '/student',
    getParentRoute: () => rootRouteImport,
} as any);
const authLoginRoute = authLoginRouteImport.update({
    id: '/(auth)/login',
    path: '/login',
    getParentRoute: () => rootRouteImport,
} as any);
const dashboardStudentLayoutRoute = dashboardStudentLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => dashboardStudentRoute,
} as any);
const dashboardStudentLayoutIndexRoute =
    dashboardStudentLayoutIndexRouteImport.update({
        id: '/',
        path: '/',
        getParentRoute: () => dashboardStudentLayoutRoute,
    } as any);
const dashboardStudentLayoutLibraryNotesIndexRoute =
    dashboardStudentLayoutLibraryNotesIndexRouteImport.update({
        id: '/library/notes/',
        path: '/library/notes/',
        getParentRoute: () => dashboardStudentLayoutRoute,
    } as any);
const dashboardStudentLayoutLibraryCoursesIndexRoute =
    dashboardStudentLayoutLibraryCoursesIndexRouteImport.update({
        id: '/library/courses/',
        path: '/library/courses/',
        getParentRoute: () => dashboardStudentLayoutRoute,
    } as any);
const dashboardStudentLayoutLibraryAssignmentsIndexRoute =
    dashboardStudentLayoutLibraryAssignmentsIndexRouteImport.update({
        id: '/library/assignments/',
        path: '/library/assignments/',
        getParentRoute: () => dashboardStudentLayoutRoute,
    } as any);

export interface FileRoutesByFullPath {
    '/': typeof IndexRoute;
    '/login': typeof authLoginRoute;
    '/student': typeof dashboardStudentLayoutRouteWithChildren;
    '/student/': typeof dashboardStudentLayoutIndexRoute;
    '/student/library/assignments': typeof dashboardStudentLayoutLibraryAssignmentsIndexRoute;
    '/student/library/courses': typeof dashboardStudentLayoutLibraryCoursesIndexRoute;
    '/student/library/notes': typeof dashboardStudentLayoutLibraryNotesIndexRoute;
}
export interface FileRoutesByTo {
    '/': typeof IndexRoute;
    '/login': typeof authLoginRoute;
    '/student': typeof dashboardStudentLayoutIndexRoute;
    '/student/library/assignments': typeof dashboardStudentLayoutLibraryAssignmentsIndexRoute;
    '/student/library/courses': typeof dashboardStudentLayoutLibraryCoursesIndexRoute;
    '/student/library/notes': typeof dashboardStudentLayoutLibraryNotesIndexRoute;
}
export interface FileRoutesById {
    __root__: typeof rootRouteImport;
    '/': typeof IndexRoute;
    '/(auth)/login': typeof authLoginRoute;
    '/(dashboard)/student': typeof dashboardStudentRouteWithChildren;
    '/(dashboard)/student/_layout': typeof dashboardStudentLayoutRouteWithChildren;
    '/(dashboard)/student/_layout/': typeof dashboardStudentLayoutIndexRoute;
    '/(dashboard)/student/_layout/library/assignments/': typeof dashboardStudentLayoutLibraryAssignmentsIndexRoute;
    '/(dashboard)/student/_layout/library/courses/': typeof dashboardStudentLayoutLibraryCoursesIndexRoute;
    '/(dashboard)/student/_layout/library/notes/': typeof dashboardStudentLayoutLibraryNotesIndexRoute;
}
export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath;
    fullPaths:
        | '/'
        | '/login'
        | '/student'
        | '/student/'
        | '/student/library/assignments'
        | '/student/library/courses'
        | '/student/library/notes';
    fileRoutesByTo: FileRoutesByTo;
    to:
        | '/'
        | '/login'
        | '/student'
        | '/student/library/assignments'
        | '/student/library/courses'
        | '/student/library/notes';
    id:
        | '__root__'
        | '/'
        | '/(auth)/login'
        | '/(dashboard)/student'
        | '/(dashboard)/student/_layout'
        | '/(dashboard)/student/_layout/'
        | '/(dashboard)/student/_layout/library/assignments/'
        | '/(dashboard)/student/_layout/library/courses/'
        | '/(dashboard)/student/_layout/library/notes/';
    fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
    IndexRoute: typeof IndexRoute;
    authLoginRoute: typeof authLoginRoute;
    dashboardStudentRoute: typeof dashboardStudentRouteWithChildren;
}

declare module '@tanstack/react-router' {
    interface FileRoutesByPath {
        '/': {
            id: '/';
            path: '/';
            fullPath: '/';
            preLoaderRoute: typeof IndexRouteImport;
            parentRoute: typeof rootRouteImport;
        };
        '/(dashboard)/student': {
            id: '/(dashboard)/student';
            path: '/student';
            fullPath: '/student';
            preLoaderRoute: typeof dashboardStudentRouteImport;
            parentRoute: typeof rootRouteImport;
        };
        '/(auth)/login': {
            id: '/(auth)/login';
            path: '/login';
            fullPath: '/login';
            preLoaderRoute: typeof authLoginRouteImport;
            parentRoute: typeof rootRouteImport;
        };
        '/(dashboard)/student/_layout': {
            id: '/(dashboard)/student/_layout';
            path: '/student';
            fullPath: '/student';
            preLoaderRoute: typeof dashboardStudentLayoutRouteImport;
            parentRoute: typeof dashboardStudentRoute;
        };
        '/(dashboard)/student/_layout/': {
            id: '/(dashboard)/student/_layout/';
            path: '/';
            fullPath: '/student/';
            preLoaderRoute: typeof dashboardStudentLayoutIndexRouteImport;
            parentRoute: typeof dashboardStudentLayoutRoute;
        };
        '/(dashboard)/student/_layout/library/notes/': {
            id: '/(dashboard)/student/_layout/library/notes/';
            path: '/library/notes';
            fullPath: '/student/library/notes';
            preLoaderRoute: typeof dashboardStudentLayoutLibraryNotesIndexRouteImport;
            parentRoute: typeof dashboardStudentLayoutRoute;
        };
        '/(dashboard)/student/_layout/library/courses/': {
            id: '/(dashboard)/student/_layout/library/courses/';
            path: '/library/courses';
            fullPath: '/student/library/courses';
            preLoaderRoute: typeof dashboardStudentLayoutLibraryCoursesIndexRouteImport;
            parentRoute: typeof dashboardStudentLayoutRoute;
        };
        '/(dashboard)/student/_layout/library/assignments/': {
            id: '/(dashboard)/student/_layout/library/assignments/';
            path: '/library/assignments';
            fullPath: '/student/library/assignments';
            preLoaderRoute: typeof dashboardStudentLayoutLibraryAssignmentsIndexRouteImport;
            parentRoute: typeof dashboardStudentLayoutRoute;
        };
    }
}

interface dashboardStudentLayoutRouteChildren {
    dashboardStudentLayoutIndexRoute: typeof dashboardStudentLayoutIndexRoute;
    dashboardStudentLayoutLibraryAssignmentsIndexRoute: typeof dashboardStudentLayoutLibraryAssignmentsIndexRoute;
    dashboardStudentLayoutLibraryCoursesIndexRoute: typeof dashboardStudentLayoutLibraryCoursesIndexRoute;
    dashboardStudentLayoutLibraryNotesIndexRoute: typeof dashboardStudentLayoutLibraryNotesIndexRoute;
}

const dashboardStudentLayoutRouteChildren: dashboardStudentLayoutRouteChildren =
    {
        dashboardStudentLayoutIndexRoute: dashboardStudentLayoutIndexRoute,
        dashboardStudentLayoutLibraryAssignmentsIndexRoute:
            dashboardStudentLayoutLibraryAssignmentsIndexRoute,
        dashboardStudentLayoutLibraryCoursesIndexRoute:
            dashboardStudentLayoutLibraryCoursesIndexRoute,
        dashboardStudentLayoutLibraryNotesIndexRoute:
            dashboardStudentLayoutLibraryNotesIndexRoute,
    };

const dashboardStudentLayoutRouteWithChildren =
    dashboardStudentLayoutRoute._addFileChildren(
        dashboardStudentLayoutRouteChildren,
    );

interface dashboardStudentRouteChildren {
    dashboardStudentLayoutRoute: typeof dashboardStudentLayoutRouteWithChildren;
}

const dashboardStudentRouteChildren: dashboardStudentRouteChildren = {
    dashboardStudentLayoutRoute: dashboardStudentLayoutRouteWithChildren,
};

const dashboardStudentRouteWithChildren =
    dashboardStudentRoute._addFileChildren(dashboardStudentRouteChildren);

const rootRouteChildren: RootRouteChildren = {
    IndexRoute: IndexRoute,
    authLoginRoute: authLoginRoute,
    dashboardStudentRoute: dashboardStudentRouteWithChildren,
};
export const routeTree = rootRouteImport
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>();
